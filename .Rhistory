xlab("2-day Sequence (RED: Flood, Black: CDR)") + ggtitle(paste0("Flood vs. Incoming Calls in Flooded Areas (", city, ")"))
outgoing <- ggplot(louis_out, aes(x = date, y = (scale_call), group = 1)) +
geom_point(size = 1) +
geom_line() +
geom_point(aes(y=scale(Matam)[,1]), colour = "red", size=1) +
geom_line(aes(y=scale(Matam)[,1]), colour = "red") +
theme_bw() + theme(legend.text=element_text(size=15)) +
ylab(label="Scaled, Average Calls per Hour | Precipitations") +
xlab("2-day Sequence (RED: Flood, Black: CDR)") + ggtitle(paste0("Flood vs. Outgoing Calls in Flooded Areas (", city, ")"))
multiplot(incoming, outgoing, cols = 1)
}
}
regress("MATAM", "MATAM/OURO SOGUI")
p.adjust(saint_in, method="bonferroni", n=2)
p.adjust(dakar_in, method="bonferroni", n=2)
p.adjust(kaolack_in, method="bonferroni", n=2)
p.adjust(kao_in, method="bonferroni", n=2)
p.adjust(matam_in, method="bonferroni", n=2)
louis_out$scale_call <- scale(louis_out$call)[,1]
source('~/git/un_climate/src/R/regression_table1.R', echo=TRUE)
install.packages("clusterSim")
library(jsonlite)
library(ggmap)
library(ggplot2)
library(stringr)
library(readr)
library(dplyr)
library(data.table)
library(sp)
library(rgeos)
library(rgdal)
library(geosphere)
library(raster)
library(classInt)
library(leaflet)
library(RColorBrewer)
library(maptools)
library(clusterSim)
require(kohonen)
library(deldir)
library(mapproj)
library(lubridate)
library(scales)
require(Hmisc)
library(rLiDAR)
setwd("/Users/myeong/git/un_climate/data/")
flood <- read_delim("flood/RegionFlood2.csv", delim = ",",col_names = TRUE )
flood$month <- month(flood$date)
flood$day <- day(flood$date)
flood$two_day <- 0
for (i in 1:nrow(flood)){
month <- flood[i,]$month
num_days_until_prev_month = 0
for (m in 1:month){
num_days_until_prev_month <- num_days_until_prev_month + monthDays(as.Date(paste0("2013-", toString(m), "-01")))
}
num_days_until_prev_month <- num_days_until_prev_month - monthDays(flood[i,]$date)
flood[i,]$two_day <- ceiling((num_days_until_prev_month + flood[i,]$day) / 2)
}
matam_in <- c()
saint_in <- c()
dakar_in <- c()
kao_in <- c()
regress <- function(city, station) {
louis_in <- read_delim(paste0("output/", city, "_incoming.csv"), delim = ",",col_names = TRUE )
louis_out <- read_delim(paste0("output/", city, "_outgoing.csv"), delim = ",",col_names = TRUE )
louis_in$two_day <- louis_in$two_day - 1
louis_out$two_day <- louis_out$two_day - 1
louis_in <- louis_in %>% left_join(flood, by = c("two_day"))
louis_out <- louis_out %>% left_join(flood, by = c("two_day"))
louis_in$month <- month(louis_in$date)
louis_out$month <- month(louis_out$date)
louis_in <- louis_in[louis_in$month >= 6,]
louis_out <- louis_out[louis_out$month >= 6,]
louis_in <- louis_in[complete.cases(louis_in$two_day),]
louis_out <- louis_out[complete.cases(louis_out$two_day),]
if (city == "SAINT-LOUIS"){
print(summary(lm(calls ~ SaintLouis, data=louis_in)))
print(summary(lm(calls ~ SaintLouis, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), SaintLouis=max(SaintLouis), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), SaintLouis=max(SaintLouis), date=max(date))
print(summary(lm(scale(call) ~ scale(SaintLouis), data=louis_in)))
print(summary(lm(scale(call) ~ scale(SaintLouis), data=louis_out)))
saint_in <<- c(saint_in, summary(lm(scale(call) ~ scale(SaintLouis), data=louis_in))$coefficients[,4][2])
saint_in <<- c(saint_in, summary(lm(scale(call) ~ scale(SaintLouis), data=louis_out))$coefficients[,4][2])
louis_in$scale_call <- scale(louis_in$call)[,1]
louis_out$scale_call <- scale(louis_out$call)[,1]
} else if (city == "DAKAR"){
print(summary(lm(calls ~ Dakar, data=louis_in)))
print(summary(lm(calls ~ Dakar, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Dakar=max(Dakar), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Dakar=max(Dakar), date=max(date))
print(summary(lm(scale(call) ~ scale(Dakar), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Dakar), data=louis_out)))
dakar_in <<- c(dakar_in, summary(lm(scale(call) ~ scale(Dakar), data=louis_in))$coefficients[,4][2])
dakar_in <<- c(dakar_in, summary(lm(scale(call) ~ scale(Dakar), data=louis_out))$coefficients[,4][2])
louis_in$scale_call <- scale(louis_in$call)[,1]
louis_out$scale_call <- scale(louis_out$call)[,1]
} else if (city == "KAOLACK"){
print(summary(lm(calls ~ Kaolack, data=louis_in)))
print(summary(lm(calls ~ Kaolack, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Kaolack=max(Kaolack), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Kaolack=max(Kaolack), date=max(date))
print(summary(lm(scale(call) ~ scale(Kaolack), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Kaolack), data=louis_out)))
kao_in <<- c(kao_in, summary(lm(scale(call) ~ scale(Kaolack), data=louis_in))$coefficients[,4][2])
kao_in <<- c(kao_in, summary(lm(scale(call) ~ scale(Kaolack), data=louis_out))$coefficients[,4][2])
louis_in$scale_call <- scale(louis_in$call)[,1]
louis_out$scale_call <- scale(louis_out$call)[,1]
} else if (city == "MATAM"){
print(summary(lm(calls ~ Matam, data=louis_in)))
print(summary(lm(calls ~ Matam, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Matam=max(Matam), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Matam=max(Matam), date=max(date))
print(summary(lm(scale(call) ~ scale(Matam), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Matam), data=louis_out)))
matam_in <<- c(matam_in, summary(lm(scale(call) ~ scale(Matam), data=louis_in))$coefficients[,4][2])
matam_in <<- c(matam_in, summary(lm(scale(call) ~ scale(Matam), data=louis_out))$coefficients[,4][2])
louis_in$scale_call <- scale(louis_in$call)[,1]
louis_out$scale_call <- scale(louis_out$call)[,1]
}
}
regress("SAINT-LOUIS", "SAINT LOUIS")
regress("DAKAR", "LEOPOLD SEDAR SENGHOR INTL")
regress("KAOLACK", "KAOLACK")
regress("MATAM", "MATAM/OURO SOGUI")
p.adjust(saint_in, method="bonferroni", n=2)
p.adjust(dakar_in, method="bonferroni", n=2)
p.adjust(kao_in, method="bonferroni", n=2)
p.adjust(matam_in, method="bonferroni", n=2)
library(jsonlite)
library(ggmap)
library(ggplot2)
library(stringr)
library(readr)
library(dplyr)
library(data.table)
library(sp)
library(rgeos)
library(rgdal)
library(geosphere)
library(raster)
library(classInt)
library(leaflet)
library(RColorBrewer)
library(maptools)
library(clusterSim)
require(kohonen)
library(deldir)
library(mapproj)
library(lubridate)
library(scales)
require(Hmisc)
library(rLiDAR)
setwd("/Users/myeong/git/un_climate/data/")
flood <- read_delim("flood/RegionFlood2.csv", delim = ",",col_names = TRUE )
flood$month <- month(flood$date)
flood$day <- day(flood$date)
flood$two_day <- 0
for (i in 1:nrow(flood)){
month <- flood[i,]$month
num_days_until_prev_month = 0
for (m in 1:month){
num_days_until_prev_month <- num_days_until_prev_month + monthDays(as.Date(paste0("2013-", toString(m), "-01")))
}
num_days_until_prev_month <- num_days_until_prev_month - monthDays(flood[i,]$date)
flood[i,]$two_day <- ceiling((num_days_until_prev_month + flood[i,]$day) / 2)
}
matam_in <- c()
saint_in <- c()
dakar_in <- c()
kao_in <- c()
regress <- function(city, station) {
louis_in <- read_delim(paste0("output/", city, "_incoming.csv"), delim = ",",col_names = TRUE )
louis_out <- read_delim(paste0("output/", city, "_outgoing.csv"), delim = ",",col_names = TRUE )
louis_in$two_day <- louis_in$two_day - 1
louis_out$two_day <- louis_out$two_day - 1
louis_in <- louis_in %>% left_join(flood, by = c("two_day"))
louis_out <- louis_out %>% left_join(flood, by = c("two_day"))
louis_in$month <- month(louis_in$date)
louis_out$month <- month(louis_out$date)
louis_in <- louis_in[louis_in$month < 6,]
louis_out <- louis_out[louis_out$month < 6,]
louis_in <- louis_in[complete.cases(louis_in$two_day),]
louis_out <- louis_out[complete.cases(louis_out$two_day),]
if (city == "SAINT-LOUIS"){
print(summary(lm(calls ~ SaintLouis, data=louis_in)))
print(summary(lm(calls ~ SaintLouis, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), SaintLouis=max(SaintLouis), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), SaintLouis=max(SaintLouis), date=max(date))
print(summary(lm(scale(call) ~ scale(SaintLouis), data=louis_in)))
print(summary(lm(scale(call) ~ scale(SaintLouis), data=louis_out)))
saint_in <<- c(saint_in, summary(lm(scale(call) ~ scale(SaintLouis), data=louis_in))$coefficients[,4][2])
saint_in <<- c(saint_in, summary(lm(scale(call) ~ scale(SaintLouis), data=louis_out))$coefficients[,4][2])
louis_in$scale_call <- scale(louis_in$call)[,1]
louis_out$scale_call <- scale(louis_out$call)[,1]
} else if (city == "DAKAR"){
print(summary(lm(calls ~ Dakar, data=louis_in)))
print(summary(lm(calls ~ Dakar, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Dakar=max(Dakar), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Dakar=max(Dakar), date=max(date))
print(summary(lm(scale(call) ~ scale(Dakar), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Dakar), data=louis_out)))
dakar_in <<- c(dakar_in, summary(lm(scale(call) ~ scale(Dakar), data=louis_in))$coefficients[,4][2])
dakar_in <<- c(dakar_in, summary(lm(scale(call) ~ scale(Dakar), data=louis_out))$coefficients[,4][2])
louis_in$scale_call <- scale(louis_in$call)[,1]
louis_out$scale_call <- scale(louis_out$call)[,1]
} else if (city == "KAOLACK"){
print(summary(lm(calls ~ Kaolack, data=louis_in)))
print(summary(lm(calls ~ Kaolack, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Kaolack=max(Kaolack), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Kaolack=max(Kaolack), date=max(date))
print(summary(lm(scale(call) ~ scale(Kaolack), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Kaolack), data=louis_out)))
kao_in <<- c(kao_in, summary(lm(scale(call) ~ scale(Kaolack), data=louis_in))$coefficients[,4][2])
kao_in <<- c(kao_in, summary(lm(scale(call) ~ scale(Kaolack), data=louis_out))$coefficients[,4][2])
louis_in$scale_call <- scale(louis_in$call)[,1]
louis_out$scale_call <- scale(louis_out$call)[,1]
} else if (city == "MATAM"){
print(summary(lm(calls ~ Matam, data=louis_in)))
print(summary(lm(calls ~ Matam, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Matam=max(Matam), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Matam=max(Matam), date=max(date))
print(summary(lm(scale(call) ~ scale(Matam), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Matam), data=louis_out)))
matam_in <<- c(matam_in, summary(lm(scale(call) ~ scale(Matam), data=louis_in))$coefficients[,4][2])
matam_in <<- c(matam_in, summary(lm(scale(call) ~ scale(Matam), data=louis_out))$coefficients[,4][2])
louis_in$scale_call <- scale(louis_in$call)[,1]
louis_out$scale_call <- scale(louis_out$call)[,1]
}
}
regress("SAINT-LOUIS", "SAINT LOUIS")
regress("DAKAR", "LEOPOLD SEDAR SENGHOR INTL")
regress("KAOLACK", "KAOLACK")
regress("MATAM", "MATAM/OURO SOGUI")
p.adjust(saint_in, method="bonferroni", n=2)
p.adjust(dakar_in, method="bonferroni", n=2)
p.adjust(kao_in, method="bonferroni", n=2)
p.adjust(matam_in, method="bonferroni", n=2)
# Chunk 1
library(jsonlite)
library(ggmap)
library(ggplot2)
library(stringr)
library(readr)
library(dplyr)
library(data.table)
library(sp)
library(rgeos)
library(rgdal)
library(geosphere)
library(raster)
library(classInt)
library(leaflet)
library(RColorBrewer)
library(maptools)
library(clusterSim)
require(kohonen)
library(deldir)
library(mapproj)
library(lubridate)
library(scales)
require(Hmisc)
library(rLiDAR)
setwd("/Users/myeong/git/un_climate/data/")
flood <- read_delim("flood/RegionFlood2.csv", delim = ",",col_names = TRUE )
flood$month <- month(flood$date)
flood$day <- day(flood$date)
flood$two_day <- 0
for (i in 1:nrow(flood)){
month <- flood[i,]$month
num_days_until_prev_month = 0
for (m in 1:month){
num_days_until_prev_month <- num_days_until_prev_month + monthDays(as.Date(paste0("2013-", toString(m), "-01")))
}
num_days_until_prev_month <- num_days_until_prev_month - monthDays(flood[i,]$date)
flood[i,]$two_day <- ceiling((num_days_until_prev_month + flood[i,]$day) / 2)
}
matam_in <- c()
saint_in <- c()
dakar_in <- c()
kao_in <- c()
regress <- function(city, station, rainy) {
louis_in <- read_delim(paste0("output/", city, "_incoming.csv"), delim = ",",col_names = TRUE )
louis_out <- read_delim(paste0("output/", city, "_outgoing.csv"), delim = ",",col_names = TRUE )
louis_in$two_day <- louis_in$two_day - 1
louis_out$two_day <- louis_out$two_day - 1
louis_in <- louis_in %>% left_join(flood, by = c("two_day"))
louis_out <- louis_out %>% left_join(flood, by = c("two_day"))
louis_in$month <- month(louis_in$date)
louis_out$month <- month(louis_out$date)
if (rainy == "rainy"){
louis_in <- louis_in[louis_in$month >= 6,]
louis_out <- louis_out[louis_out$month >= 6,]
} else {
louis_in <- louis_in[louis_in$month < 6,]
louis_out <- louis_out[louis_out$month < 6,]
}
louis_in <- louis_in[complete.cases(louis_in$two_day),]
louis_out <- louis_out[complete.cases(louis_out$two_day),]
if (city == "SAINT-LOUIS"){
print(summary(lm(calls ~ SaintLouis, data=louis_in)))
print(summary(lm(calls ~ SaintLouis, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), SaintLouis=max(SaintLouis), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), SaintLouis=max(SaintLouis), date=max(date))
print(summary(lm(scale(call) ~ scale(SaintLouis), data=louis_in)))
print(summary(lm(scale(call) ~ scale(SaintLouis), data=louis_out)))
saint_in <<- c(saint_in, summary(lm(scale(call) ~ scale(SaintLouis), data=louis_in))$coefficients[,4][2])
saint_in <<- c(saint_in, summary(lm(scale(call) ~ scale(SaintLouis), data=louis_out))$coefficients[,4][2])
p.adjust(saint_in, method="bonferroni", n=2)
} else if (city == "DAKAR"){
print(summary(lm(calls ~ Dakar, data=louis_in)))
print(summary(lm(calls ~ Dakar, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Dakar=max(Dakar), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Dakar=max(Dakar), date=max(date))
print(summary(lm(scale(call) ~ scale(Dakar), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Dakar), data=louis_out)))
dakar_in <<- c(dakar_in, summary(lm(scale(call) ~ scale(Dakar), data=louis_in))$coefficients[,4][2])
dakar_in <<- c(dakar_in, summary(lm(scale(call) ~ scale(Dakar), data=louis_out))$coefficients[,4][2])
p.adjust(dakar_in, method="bonferroni", n=2)
} else if (city == "KAOLACK"){
print(summary(lm(calls ~ Kaolack, data=louis_in)))
print(summary(lm(calls ~ Kaolack, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Kaolack=max(Kaolack), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Kaolack=max(Kaolack), date=max(date))
print(summary(lm(scale(call) ~ scale(Kaolack), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Kaolack), data=louis_out)))
kao_in <<- c(kao_in, summary(lm(scale(call) ~ scale(Kaolack), data=louis_in))$coefficients[,4][2])
kao_in <<- c(kao_in, summary(lm(scale(call) ~ scale(Kaolack), data=louis_out))$coefficients[,4][2])
p.adjust(kao_in, method="bonferroni", n=2)
} else if (city == "MATAM"){
print(summary(lm(calls ~ Matam, data=louis_in)))
print(summary(lm(calls ~ Matam, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Matam=max(Matam), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Matam=max(Matam), date=max(date))
print(summary(lm(scale(call) ~ scale(Matam), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Matam), data=louis_out)))
matam_in <<- c(matam_in, summary(lm(scale(call) ~ scale(Matam), data=louis_in))$coefficients[,4][2])
matam_in <<- c(matam_in, summary(lm(scale(call) ~ scale(Matam), data=louis_out))$coefficients[,4][2])
p.adjust(matam_in, method="bonferroni", n=2)
}
}
regress("SAINT-LOUIS", "SAINT LOUIS", "rainy")
regress("DAKAR", "LEOPOLD SEDAR SENGHOR INTL", "rainy")
regress("KAOLACK", "KAOLACK", "rainy")
regress("MATAM", "MATAM/OURO SOGUI", "rainy")
regress("SAINT-LOUIS", "SAINT LOUIS", "non")
regress("SAINT-LOUIS", "SAINT LOUIS", "rainy")
setwd("/Users/myeong/git/un_climate/data/")
flood <- read_delim("flood/RegionFlood2.csv", delim = ",",col_names = TRUE )
flood$month <- month(flood$date)
flood$day <- day(flood$date)
flood$two_day <- 0
for (i in 1:nrow(flood)){
month <- flood[i,]$month
num_days_until_prev_month = 0
for (m in 1:month){
num_days_until_prev_month <- num_days_until_prev_month + monthDays(as.Date(paste0("2013-", toString(m), "-01")))
}
num_days_until_prev_month <- num_days_until_prev_month - monthDays(flood[i,]$date)
flood[i,]$two_day <- ceiling((num_days_until_prev_month + flood[i,]$day) / 2)
}
matam_in <- c()
saint_in <- c()
dakar_in <- c()
kao_in <- c()
regress <- function(city, station, rainy) {
louis_in <- read_delim(paste0("output/", city, "_incoming.csv"), delim = ",",col_names = TRUE )
louis_out <- read_delim(paste0("output/", city, "_outgoing.csv"), delim = ",",col_names = TRUE )
louis_in$two_day <- louis_in$two_day - 1
louis_out$two_day <- louis_out$two_day - 1
louis_in <- louis_in %>% left_join(flood, by = c("two_day"))
louis_out <- louis_out %>% left_join(flood, by = c("two_day"))
louis_in$month <- month(louis_in$date)
louis_out$month <- month(louis_out$date)
if (rainy == "rainy"){
louis_in <- louis_in[louis_in$month >= 6,]
louis_out <- louis_out[louis_out$month >= 6,]
} else {
louis_in <- louis_in[louis_in$month < 6,]
louis_out <- louis_out[louis_out$month < 6,]
}
louis_in <- louis_in[complete.cases(louis_in$two_day),]
louis_out <- louis_out[complete.cases(louis_out$two_day),]
if (city == "SAINT-LOUIS"){
print(summary(lm(calls ~ SaintLouis, data=louis_in)))
print(summary(lm(calls ~ SaintLouis, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), SaintLouis=max(SaintLouis), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), SaintLouis=max(SaintLouis), date=max(date))
print(summary(lm(scale(call) ~ scale(SaintLouis), data=louis_in)))
print(summary(lm(scale(call) ~ scale(SaintLouis), data=louis_out)))
saint_in <<- c(saint_in, summary(lm(scale(call) ~ scale(SaintLouis), data=louis_in))$coefficients[,4][2])
saint_in <<- c(saint_in, summary(lm(scale(call) ~ scale(SaintLouis), data=louis_out))$coefficients[,4][2])
p.adjust(saint_in, method="bonferroni", n=2)
} else if (city == "DAKAR"){
print(summary(lm(calls ~ Dakar, data=louis_in)))
print(summary(lm(calls ~ Dakar, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Dakar=max(Dakar), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Dakar=max(Dakar), date=max(date))
print(summary(lm(scale(call) ~ scale(Dakar), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Dakar), data=louis_out)))
dakar_in <<- c(dakar_in, summary(lm(scale(call) ~ scale(Dakar), data=louis_in))$coefficients[,4][2])
dakar_in <<- c(dakar_in, summary(lm(scale(call) ~ scale(Dakar), data=louis_out))$coefficients[,4][2])
p.adjust(dakar_in, method="bonferroni", n=2)
} else if (city == "KAOLACK"){
print(summary(lm(calls ~ Kaolack, data=louis_in)))
print(summary(lm(calls ~ Kaolack, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Kaolack=max(Kaolack), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Kaolack=max(Kaolack), date=max(date))
print(summary(lm(scale(call) ~ scale(Kaolack), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Kaolack), data=louis_out)))
kao_in <<- c(kao_in, summary(lm(scale(call) ~ scale(Kaolack), data=louis_in))$coefficients[,4][2])
kao_in <<- c(kao_in, summary(lm(scale(call) ~ scale(Kaolack), data=louis_out))$coefficients[,4][2])
p.adjust(kao_in, method="bonferroni", n=2)
} else if (city == "MATAM"){
print(summary(lm(calls ~ Matam, data=louis_in)))
print(summary(lm(calls ~ Matam, data=louis_out)))
louis_in <- louis_in %>% group_by(two_day) %>% summarise(call = sum(calls), Matam=max(Matam), date=max(date))
louis_out <- louis_out %>% group_by(two_day) %>% summarise(call = sum(calls), Matam=max(Matam), date=max(date))
print(summary(lm(scale(call) ~ scale(Matam), data=louis_in)))
print(summary(lm(scale(call) ~ scale(Matam), data=louis_out)))
matam_in <<- c(matam_in, summary(lm(scale(call) ~ scale(Matam), data=louis_in))$coefficients[,4][2])
matam_in <<- c(matam_in, summary(lm(scale(call) ~ scale(Matam), data=louis_out))$coefficients[,4][2])
p.adjust(matam_in, method="bonferroni", n=2)
}
}
regress("SAINT-LOUIS", "SAINT LOUIS", "rainy")
regress("SAINT-LOUIS", "SAINT LOUIS", "non")
city <- "DAKAR"
voro <- readOGR(paste0("voronoi/", city, "_features.geojson"), "OGRGeoJSON") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
library(maps)
library(geosphere)
library(readr)
library(dplyr)
library(magrittr)
library(lubridate)
library(rgdal)
library(raster)
library(rgeos)
require(ggplot2)
library(cwhmisc)
library(utils)
library(rpart)
library(stringr)
library(hydroGOF)
library(fields)
library(MASS)
library(e1071)
library(reshape2)
library(igraph)
library(lmtest)
library(car)
library(caret) # box-cox
library(gvlma) # lin
setwd("/Users/myeong/git/un_climate/data/")
voro <- readOGR(paste0("voronoi/", city, "_features.geojson"), "OGRGeoJSON") %>% spTransform(CRS("+proj=longlat +datum=WGS84"))
library(maps)
library(geosphere)
library(readr)
library(dplyr)
library(magrittr)
library(lubridate)
library(rgdal)
library(raster)
library(rgeos)
require(ggplot2)
library(cwhmisc)
library(utils)
library(rpart)
library(stringr)
library(hydroGOF)
library(fields)
library(MASS)
library(e1071)
library(raster)
library(reshape2)
library(igraph)
library(Hmisc)
library(randomForest)
library(caret)
library(leaflet)
library(RColorBrewer)
library(classInt)
library(maptools)
library(googleVis)
library(ggmap)
setwd("/Users/myeong/git/311/")
cases = read_delim("dataverse_files/CRM Cases 2010_2014 Restricted.tab", delim = "\t",col_names = TRUE )
View(cases)
cases = read_delim("dataverse_files/CRM Cases 2010_2014 Unestricted.tab", delim = "\t",col_names = TRUE )
cases = read_delim("dataverse_files/CRM Cases 2010_2014 Unrestricted.tab", delim = "\t",col_names = TRUE )
View(cases)
user <- read_delim("dataverse_files/CRM Users Restricted.tab", delim = "\t",col_names = TRUE )
View(user)
cases = read_delim("dataverse_files/CRM Cases 2010_2014 Restricted.tab", delim = "\t",col_names = TRUE )
user$Party_ID[1]
as.integer(user$Party_ID[1])
user$Party_ID <- as.integer(user$Party_ID)
user <- read_delim("dataverse_files/CRM Users Restricted.tab", delim = "\t",col_names = TRUE )
user$Party_ID <- as.character(user$Party_ID)
cases <- cases %>% left_join(user[,c("Party_ID", "Code")], by=c("CASE_INQUIRY_ID" = "Party_ID"))
cases$CASE_ENQUIRY_ID <- as.character(cases$CASE_ENQUIRY_ID)
cases <- cases %>% left_join(user[,c("Party_ID", "Code")], by=c("CASE_INQUIRY_ID" = "Party_ID"))
cases <- cases %>% left_join(user[,c("Party_ID", "Code")], by=c("CASE_ENQUIRY_ID" = "Party_ID"))
View(cases)
nrow(user[is.na(user$code),])
nrow(user[is.na(user$Code),])
cases = read_delim("dataverse_files/CRM Cases 2010_2014 Restricted.tab", delim = "\t",col_names = TRUE )
cases <- cases %>% left_join(user[,c("Party_ID", "Code")], by=c("PARTYID" = "Party_ID"))
cases$PARTYID <-as.character(cases$PARTYID)
cases <- cases %>% left_join(user[,c("Party_ID", "Code")], by=c("PARTYID" = "Party_ID"))
View(cases)
