mapPoints
map <- ggmap::get_map(location=c(-71.09, 42.34), zoom = 13, color = "bw")
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude), color='blue', data = cases[cases$neighborhood=="Boston",], alpha=0.8,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
map <- ggmap::get_map(location=c(-71.09, 42.34), zoom = 12, color = "bw")
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude), color='blue', data = cases[cases$neighborhood=="Brighton",], alpha=0.8,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude), color='blue', data = cases[cases$neighborhood=="Charlestown",], alpha=0.8,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude), color='blue', data = cases[cases$neighborhood=="Chestnut Hill",], alpha=0.8,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
levels(cases$neighborhood)
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude), color='blue', data = cases[cases$neighborhood=="Dorchester",], alpha=0.8,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude), color='blue', data = cases[cases$neighborhood=="Downtown / Financial District",], alpha=0.8,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
map <- ggmap::get_map(location=c(-71.09, 42.34), zoom = 13, color = "bw")
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude), color='blue', data = cases[cases$neighborhood=="Downtown / Financial District",], alpha=0.8,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude, colour=neighborhood), data = cases, alpha=0.5,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
map <- ggmap::get_map(location=c(-71.09, 42.32), zoom = 12, color = "bw")
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude, colour=neighborhood), data = cases, alpha=0.5,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
map <- ggmap::get_map(location=c(-71.09, 42.31), zoom = 12, color = "bw")
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude, colour=neighborhood), data = cases, alpha=0.5,size=1) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude, colour=neighborhood), data = cases, alpha=0.5, size=1, show.legend = FALSE) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
map <- ggmap::get_map(location=c(-71.09, 42.30), zoom = 12, color = "bw")
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude, colour=neighborhood), data = cases, alpha=0.5, size=1, show.legend = FALSE) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
map <- ggmap::get_map(location=c(-71.09, 42.305), zoom = 12, color = "bw")
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude, colour=neighborhood), data = cases, alpha=0.5, size=1, show.legend = FALSE) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
cases[cases$neighborhood=="Allston",]$neighborhood <- "Allston / Brighton"
cases[cases$neighborhood=="Allston",]
View(cases[cases$neighborhood=="Allston",])
View(cases[cases$neighborhood %in% "Allston",])
cases[cases$neighborhood %in% "Allston",]$neighborhood <- "Allston / Brighton"
cases[cases$neighborhood %in% "Brighton",]$neighborhood <- "Allston / Brighton"
cases$neighborhood <- as.character(cases$neighborhood)
cases$neighborhood <- as.factor(cases$neighborhood)
map <- ggmap::get_map(location=c(-71.09, 42.305), zoom = 12, color = "bw")
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group), data = neighborhood, color='red', alpha=0.4) +
geom_point(aes(x = longitude, y = latitude, colour=neighborhood), data = cases, alpha=0.5, size=1, show.legend = FALSE) +
geom_text(data=neighbor.df, aes(label = name, x = Longitude, y = Latitude)) +
ggtitle("311 Cases")
mapPoints
types <- cases %>% group_by(type) %>% summarise(count=n())
View(types)
types <- types[order(types$count),]
View(types)
types <- types[!order(types$count),]
types <- cases %>% group_by(type) %>% summarise(count=n())
types <- types[-order(types$count),]
types <- cases %>% group_by(type) %>% summarise(count=n())
types <- types[order(-types$count),]
View(types)
print(types)
reasons <- cases %>% group_by(reason) %>% summarise(count=n())
reasons <- reasons[order(-reasons$count),]
View(reasons)
ggplot(data=reasons, aes(x=reason, y=count)) +geom_bar(stat="identity")
reasons <- cases %>% group_by(reason) %>% summarise(count=n())
reasons <- reasons[order(-reasons$count),]
ggplot(data=reasons, aes(x=reason, y=count)) +geom_bar(stat="identity")
View(reasons)
ggplot(data=reasons, aes(x=reason, y=count)) +geom_bar(stat="identity") + coord_flip()
ggplot(data=reasons, aes(x= reorder(reason,-count),count)) +geom_bar(stat="identity") + coord_flip()
ggplot(data=reasons, aes(x= reorder(reason,count),count)) +geom_bar(stat="identity") + coord_flip()
ggplot(data=reasons, aes(x= reorder(reason,count),count)) +geom_bar(stat="identity") + ylab("Category") + coord_flip()
ggplot(data=reasons, aes(x= reorder(reason,count),count)) +geom_bar(stat="identity") + xlab("Category") + coord_flip()
ggplot(data=types[1:30,], aes(x= reorder(types,count),count)) +geom_bar(stat="identity") + xlab("Category") + coord_flip()
ggplot(data=types[1:30,], aes(x= reorder(type,count),count)) +geom_bar(stat="identity") + xlab("Types") + coord_flip()
library(googleVis)
print(types$type)
print(sample(cases$case_title, 10))
print(sample(cases$case_title, 30))
sample_ids <- sample(cases$case_enquiry_id, 30))
sample_ids <- sample(cases$case_enquiry_id, 30)
for (i in sample_ids){
text <- paste (cases[cases$case_enquiry_id==i,]$case_title, cases[cases$case_enquiry_id==i,]$subject)
print(text)
}
for (i in sample_ids){
text <- paste0 (cases[cases$case_enquiry_id==i,]$case_title, ": ", cases[cases$case_enquiry_id==i,]$subject)
print(text)
}
length(levels(as.factor(cases$subject)))
length(levels(as.factor(cases$case_title)))
cases$subject <- as.factor(cases$subject) #6 subjects
subjects <- cases %>% group_by(subject) %>% summarise(count=n())
subjects <- subjects[order(-subjects$count),]
ggplot(data=subjects, aes(x= reorder(subject,count),count)) +geom_bar(stat="identity") +
xlab("Subjects (Subjects of problems)") + ggtitle("High-level Subjects of 311 Inquiries") + coord_flip()
for (i in sample_ids){
text <- paste0 (cases[cases$case_enquiry_id==i,]$case_title, ": ", cases[cases$case_enquiry_id==i,]$closure_reason)
print(text)
}
neigh <- cases %>% group_by(neighborhood) %>% summarise(count=n())
neigh <- neigh[order(-neigh$count),]
ggplot(data=neigh, aes(x= reorder(neighborhood,count),count)) +geom_bar(stat="identity") +
xlab("Subjects (Subjects of problems)") + ggtitle("Departments that were assigned cases") + coord_flip()
ggplot(data=neigh, aes(x= reorder(neighborhood,count),count, fill=reason)) +geom_bar(stat="identity") +
xlab("Subjects (Subjects of problems)") + ggtitle("Departments that were assigned cases") + coord_flip()
neigh <- cases %>% group_by(neighborhood, reason) %>% summarise(count=n())
neigh <- neigh[order(-neigh$count),]
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity") +
xlab("Subjects (Subjects of problems)") + ggtitle("Departments that were assigned cases") + coord_flip()
library(RColorBrewer)
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black") + scale_fill_brewer(palette="Paired") +
xlab("Subjects (Subjects of problems)") + ggtitle("Departments that were assigned cases") + coord_flip()
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black") + scale_fill_brewer(palette="set3") +
xlab("Subjects (Subjects of problems)") + ggtitle("Departments that were assigned cases") + coord_flip()
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black")+
xlab("Subjects (Subjects of problems)") + ggtitle("Departments that were assigned cases") + coord_flip()
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black")+
xlab("Number of cases by reason") + ggtitle("Inquiry Reason by Neighborhood") + coord_flip()
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black")+
xlab("Number of cases by reason") + ggtitle("Inquiry Reason by Neighborhood") + coord_flip() +
theme(legend.position="bottom")
most <- neigh %>% group_by(neighborhood) %>% summarize (max = max())
most <- neigh %>% group_by(neighborhood) %>% summarise (max = max())
most <- neigh %>% group_by(neighborhood) %>% summarise (max = max(count))
most <- most[order(-most$max),]
View(most)
most <- neigh %>% group_by(neighborhood) %>% summarise (max = max(count), reason=first(reason))
View(most)
print (most[,c("neighborhood", "reason")])
colnames(most) <- c("Neighborhood", "max", "Most Siginificant Reason")
print (most[,c("Neighborhood", "Most Siginificant Reason")])
help(print)
for (i in 1:nrow(most)){
print(paste0 (most[i,]$Neighborhood, ": ", most[i,]$`Most Siginificant Reason`))
}
colorCount <- length(levels(neigh$neighborhood))
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black")+
xlab("Number of cases by reason") + ggtitle("Inquiry Reason by Neighborhood") + coord_flip() +
theme(legend.position="bottom") + scale_fill_manual(values = getPalette(colorCount))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black")+
xlab("Number of cases by reason") + ggtitle("Inquiry Reason by Neighborhood") + coord_flip() +
theme(legend.position="bottom") + scale_fill_manual(values = getPalette(colorCount))
colorCount <- length(levels(neigh$neighborhood))
colorCount <- length(levels(neigh$reason))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black")+
xlab("Number of cases by reason") + ggtitle("Inquiry Reason by Neighborhood") + coord_flip() +
theme(legend.position="bottom") + scale_fill_manual(values = getPalette(colorCount))
getPalette = colorRampPalette(brewer.pal(9, "Accent"))
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black")+
xlab("Number of cases by reason") + ggtitle("Inquiry Reason by Neighborhood") + coord_flip() +
theme(legend.position="bottom") + scale_fill_manual(values = getPalette(colorCount))
getPalette = colorRampPalette(brewer.pal(9, "Set3"))
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black")+
xlab("Number of cases by reason") + ggtitle("Inquiry Reason by Neighborhood") + coord_flip() +
theme(legend.position="bottom") + scale_fill_manual(values = getPalette(colorCount))
getPalette = colorRampPalette(brewer.pal(12, "Paried"))
getPalette = colorRampPalette(brewer.pal(12, "Paired"))
ggplot(data=neigh, aes(x= reorder(neighborhood,count), count, fill=reason)) +geom_bar(stat="identity", color="black")+
xlab("Number of cases by reason") + ggtitle("Inquiry Reason by Neighborhood") + coord_flip() +
theme(legend.position="bottom") + scale_fill_manual(values = getPalette(colorCount))
neighborhood <- readOGR("Climate_Ready_Boston_Social_Vulnerability/Climate_Ready_Boston_Social_Vulnerability.shp",
layer="Climate_Ready_Boston_Social_Vulnerability") %>%
spTransform(CRS("+proj=longlat +datum=WGS84"))
socioeconomic <- readOGR("Climate_Ready_Boston_Social_Vulnerability/Climate_Ready_Boston_Social_Vulnerability.shp",
layer="Climate_Ready_Boston_Social_Vulnerability") %>%
spTransform(CRS("+proj=longlat +datum=WGS84"))
socioeconomic@data$norm_low <- socioeconomic@data$Low_to_No / socioeconomic@data$POP100_RE
socioeconomic@data$Low_to_No <- as.numeric(socioeconomic@data$Low_to_No)
socioeconomic@data$POP100_RE <- as.numeric(socioeconomic@data$POP100_RE)
socioeconomic@data$norm_low <- socioeconomic@data$Low_to_No / socioeconomic@data$POP100_RE
map <- ggmap::get_map(location=c(-71.09, 42.305), zoom = 12, color = "bw")
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group, colour=norm_low), data = socioeconomic, color='red') +
ggtitle("Socio-economic Level")
mapPoints
mapPoints
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group, fill=norm_low), data = socioeconomic, color='red') +
scale_fill_continuous(low = "yellow", high = "red") +
ggtitle("Socio-economic Level")
mapPoints
lnd <- SpatialPolygonsDataFrame(Sr = spTransform(socioeconomic, CRSobj = CRS("+init=epsg:4326")),
data = socioeconomic@data)
lnd.f <- fortify(lnd)
lnd$id <- row.names(lnd)
lnd.f <- left_join(lnd.f, lnd@data, by=("id"))
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group, fill=norm_low), data = lnd.f, color='red') +
scale_fill_continuous(low = "yellow", high = "red") +
ggtitle("Socio-economic Level")
mapPoints
lnd.f$norm_low <- scale(lnd.f$norm_low)
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group, fill=norm_low), data = lnd.f, color='black') +
scale_fill_continuous(low = "yellow", high = "red") +
ggtitle("Socio-economic Level")
mapPoints
lnd.f$norm_low <- log(lnd.f$norm_low)
lnd.f <- fortify(lnd)
lnd$id <- row.names(lnd)
lnd.f <- left_join(lnd.f, lnd@data, by=("id"))
View(lnd.f)
summary(lnd.f$norm_low)
summary(log(lnd.f$norm_low))
lnd.f$norm_low <- log(lnd.f$norm_low)
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group, fill=norm_low), data = lnd.f, color='black') +
scale_fill_continuous(low = "yellow", high = "red") +
ggtitle("Socio-economic Level")
mapPoints
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group, fill=norm_low), data = lnd.f, color='black') +
scale_fill_continuous(low = "lightyellow", high = "red") +
ggtitle("Low-to-No Income Proportion by Census Tract (The more red, the more low income population)")
mapPoints
mapPoints
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group, fill=norm_low), data = lnd.f, color='black') +
scale_fill_continuous(low = "lightyellow", high = "red", name = "Low income density") +
ggtitle("Low-to-No Income Population (normalized) by Census Tract (The more red, the more low income population)")
mapPoints
lnd2 <- lnd %>% group_by(Name) %>% summarise(pop = sum(POP100_RE), low=sum(Low_to_No))
lnd2 <- lnd.f %>% group_by(Name) %>% summarise(pop = sum(POP100_RE), low=sum(Low_to_No))
lnd2$norm_low <- lnd2$low / lnd2$pop
pa1 <- aggregate(lnd, by='Name')
pa1 <- aggregate(lnd, by='Name', fun=sum)
pa1 <- aggregate(lnd, by='Name', sums=list(list(sum, 'POP100_RE')))
pa1 <- aggregate(lnd, by='Name', sums=list(list(sum, 'POP100_RE'), list(sum, 'Low_to_No')))
pa1.f <- fortify(pa1)
pa1$id <- row.names(pa1)
pa1.f <- left_join(pa1.f, pa1@data, by=("id"))
pa1.f$norm_low <- log(pa1.f$Low_to_No / pa1.f$POP100_RE )
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group, fill=norm_low), data = lnd.f, color='black') +
scale_fill_continuous(low = "lightyellow", high = "red", name = "Low income density") +
ggtitle("Low-to-No Income Population (normalized) by Neigbhorhood")
mapPoints
mapPoints <- ggmap(map) +
geom_polygon(aes(x=long, y=lat, group=group, fill=norm_low), data = pa1.f, color='black') +
scale_fill_continuous(low = "lightyellow", high = "red", name = "Low income density") +
ggtitle("Low-to-No Income Population (normalized) by Neigbhorhood")
mapPoints
for (i in sample_ids){
text <- paste0 (cases[cases$case_enquiry_id==i,]$case_title, ": ", cases[cases$case_enquiry_id==i,]$closure_reason)
print(text)
}
ggplot(data=types[1:30,], aes(x= reorder(type,count),count)) +geom_bar(stat="identity") +
xlab("Types (specific types of problems)") + ggtitle("Specific Types of 311 Inquiries (top-30)") + coord_flip()
ggplot(data=reasons, aes(x= reorder(reason,count),count)) +geom_bar(stat="identity") +
xlab("Categories (high-level)") + ggtitle("Categories of 311 Inquiries") + coord_flip()
xy <- cases[,c("longitude","latitude")]
points <- SpatialPointsDataFrame(coords = xy, data = cases,
proj4string = CRS("+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"))
intersection = raster::intersect(x = points, y = lnd)
intersection = raster::intersect(x = points, y = socioeconomic)
intersection = raster::intersect(x = socioeconomic, y = pints)
intersection = raster::intersect(x = socioeconomic, y = points)
nrow(socioeconomic)
for (i in socioeconomic$FID){
print(i)
print(socioeconomic[i,]@ID)
}
for (i in socioeconomic$FID){
print(i)
print(socioeconomic[socioeconomic$FID==i]$GEOID)
}
for (i in socioeconomic$FID){
print(i)
print(socioeconomic[socioeconomic$FID==i]$ID)
}
print(socioeconomic[socioeconomic$FID==i,]$ID)
for (i in socioeconomic$FID){
print(i)
print(socioeconomic[socioeconomic$FID==i,]$ID)
}
for (i in socioeconomic$FID){
print(i)
print(socioeconomic[socioeconomic$FID==i,]$GEOID10)
}
for (i in socioeconomic$FID){
print(i)
print(typeof(socioeconomic[socioeconomic$FID==i,]))
}
i="1"
intersection <- raster::intersect(x = socioeconomic[socioeconomic$FID==i,], y = points)
plot(intersection)
intersection <- raster::intersect(x = points, y = socioeconomic[socioeconomic$FID==i,])
sources <- cases %>% group_by(source) %>% summarise(count=n())
sources <- sources[order(-sources$count),]
ggplot(data=sources, aes(x= reorder(source,count),count)) +geom_bar(stat="identity") +
xlab("Reporting Mechanisms") + ggtitle("311 Reporting Source") + coord_flip()
levels(intersection@data$reason)
sani <- intersection@data[intersection@data$reason=="Sanitation",]
View(sani)
highway <- nrow(intersection@data[intersection@data$reason=="Highway Maintenance",])
housing <- nrow(intersection@data[intersection@data$reason=="Housing",])
intersection@data$norm_low
socioeconomic[socioeconomic$FID==i,]$norm_low
norm_low <- socioeconomic[socioeconomic$FID==i,]$norm_low
agg <- intersection@data %>% group_by(reason) %>% summarise(count = n())
View(agg)
agg_table <- as.data.frame(matrix(nrow=0, ncol=3))
colnames(agg_table) <- c("id", "norm_low", "reason", "count")
agg_table <- as.data.frame(matrix(nrow=0, ncol=4))
colnames(agg_table) <- c("id", "norm_low", "reason", "count")
for (i in socioeconomic$FID){
print(i)
intersection <- raster::intersect(x = points, y = socioeconomic[socioeconomic$FID==i,])
norm_low <- socioeconomic[socioeconomic$FID==i,]$norm_low
# Count the number of reasons of reporting per census tract
agg <- intersection@data %>% group_by(reason) %>% summarise(count = n())
agg$norm_low <- norm_low
agg$id <- i
agg_table <- rbind(agg_table, agg[,c("id", "norm_low", "reason", "count")])
}
i=46
i="46"
print(i)
intersection <- raster::intersect(x = points, y = socioeconomic[socioeconomic$FID==i,])
for (i in socioeconomic$FID){
print(i)
tryCatch({
intersection <- raster::intersect(x = points, y = socioeconomic[socioeconomic$FID==i,])
}, error = function(e) {
print(paste0("Iteration ", j, ": ", e))
return()
})
norm_low <- socioeconomic[socioeconomic$FID==i,]$norm_low
# Count the number of reasons of reporting per census tract
agg <- intersection@data %>% group_by(reason) %>% summarise(count = n())
agg$norm_low <- norm_low
agg$id <- i
agg_table <- rbind(agg_table, agg[,c("id", "norm_low", "reason", "count")])
}
for (i in socioeconomic$FID){
print(i)
tryCatch({
intersection <- raster::intersect(x = points, y = socioeconomic[socioeconomic$FID==i,])
}, error = function(e) {
print(paste0("Iteration ", i, ": ", e))
return()
})
norm_low <- socioeconomic[socioeconomic$FID==i,]$norm_low
# Count the number of reasons of reporting per census tract
agg <- intersection@data %>% group_by(reason) %>% summarise(count = n())
agg$norm_low <- norm_low
agg$id <- i
agg_table <- rbind(agg_table, agg[,c("id", "norm_low", "reason", "count")])
}
i="151"
tryCatch({
intersection <- raster::intersect(x = points, y = socioeconomic[socioeconomic$FID==i,])
}, error = function(e) {
print(paste0("Iteration ", i, ": ", e))
return()
})
norm_low <- socioeconomic[socioeconomic$FID==i,]$norm_low
agg <- intersection@data %>% group_by(reason) %>% summarise(count = n())
agg$norm_low <- norm_low
agg_table <- as.data.frame(matrix(nrow=0, ncol=4))
colnames(agg_table) <- c("id", "norm_low", "reason", "count")
for (i in socioeconomic$FID){
print(i)
tryCatch({
intersection <- raster::intersect(x = points, y = socioeconomic[socioeconomic$FID==i,])
}, error = function(e) {
print(paste0("Iteration ", i, ": ", e))
return()
})
if (nrow(intersection@data) == 0) next
norm_low <- socioeconomic[socioeconomic$FID==i,]$norm_low
# Count the number of reasons of reporting per census tract
agg <- intersection@data %>% group_by(reason) %>% summarise(count = n())
agg$norm_low <- norm_low
agg$id <- i
agg_table <- rbind(agg_table, agg[,c("id", "norm_low", "reason", "count")])
}
View(agg_table)
ggplot(agg_table, aes(x=reason, y=norm_low)) + geom_boxplot() +
geom_point()
ggplot(agg_table, aes(x=reason, y=norm_low)) + geom_boxplot() + ylim(c(0,5))
geom_point()
ggplot(agg_table, aes(x=reason, y=norm_low)) + geom_boxplot() + ylim(c(0,5)) +
geom_point()
ggplot(agg_table, aes(x=reorder(reason,norm_low), y=norm_low)) + geom_boxplot() + ylim(c(0,5)) +
geom_point() + ylab("Normalized Poverty Level (low-to-no income)")
ggplot(agg_table, aes(x=order(reason,norm_low), y=norm_low)) + geom_boxplot() + ylim(c(0,5)) +
geom_point() + ylab("Normalized Poverty Level (low-to-no income)")
ggplot(agg_table, aes(x=order(reason,norm_low), y=norm_low)) + geom_boxplot() + ylim(c(0,5)) +
geom_point() + ylab("Normalized Poverty Level (low-to-no income)") + coord_flip()
ggplot(agg_table, aes(x=reorder(reason,norm_low), y=norm_low)) + geom_boxplot() + ylim(c(0,5)) +
geom_point() + ylab("Normalized Poverty Level (low-to-no income)") + coord_flip()
ggplot(agg_table, aes(x=reorder(reason,norm_low), y=norm_low)) + geom_boxplot() + ylim(c(0,5)) +
geom_point() + ylab("Normalized Poverty Level (low-to-no income)") + coord_flip() + xlab("Inquiry Reason")
ggplot(agg_table, aes(x=reorder(reason,norm_low), y=norm_low)) + geom_boxplot() + ylim(c(0,5)) +
geom_point() + ylab("Normalized Poverty Level (The higher, the poorer)") + coord_flip() + xlab("Inquiry Reason")
summary(anova(norm_low ~ reason, data=agg_table))
summary(aov(norm_low ~ reason, data=agg_table))
norm_low
norm_lows <- agg_table %>% group_by(id) %>% summarise(norm_low=max(norm_low))
summary(norm_lows$norm_low)
quantiles <- summary(norm_lows$norm_low)
quantiles[1]
quantiles[2]
norm_lows$class <- ""
norm_lows[norm_lows$norm_low < quantiles[2],]$class <- "Lowest"
norm_lows[norm_lows$norm_low >= quantiles[2] & norm_lows$norm_low < quantiles[3],]$class <- "Mid-Low"
norm_lows[norm_lows$norm_low >= quantiles[3] & norm_lows$norm_low < quantiles[4],]$class <- "Mid-High"
norm_lows[norm_lows$norm_low >= quantiles[4],] <- "Highest"
View(norm_lows)
norm_lows <- agg_table %>% group_by(id) %>% summarise(norm_low=max(norm_low))
quantiles <- summary(norm_lows$norm_low)
norm_lows$class <- ""
norm_lows[norm_lows$norm_low < quantiles[2],]$class <- "Lowest"
norm_lows[norm_lows$norm_low >= quantiles[2] & norm_lows$norm_low < quantiles[3],]$class <- "Mid-Low"
norm_lows[norm_lows$norm_low >= quantiles[3] & norm_lows$norm_low < quantiles[4],]$class <- "Mid-High"
norm_lows[norm_lows$norm_low >= quantiles[4],]$class <- "Highest"
View(norm_lows)
agg_table <- agg_table %>% left_join(norm_lows[,c("id", "class")], by=c("id"))
agg_table <- agg_table %>% group_by(id) %>% summarise(count = n(), class=max())
agg_table <- as.data.frame(matrix(nrow=0, ncol=4))
colnames(agg_table) <- c("id", "norm_low", "reason", "count")
for (i in socioeconomic$FID){
print(i)
tryCatch({
intersection <- raster::intersect(x = points, y = socioeconomic[socioeconomic$FID==i,])
}, error = function(e) {
print(paste0("Iteration ", i, ": ", e))
return()
})
if (nrow(intersection@data) == 0) next
norm_low <- socioeconomic[socioeconomic$FID==i,]$norm_low
# Count the number of reasons of reporting per census tract
agg <- intersection@data %>% group_by(reason) %>% summarise(count = n())
agg$norm_low <- norm_low
agg$id <- i
agg_table <- rbind(agg_table, agg[,c("id", "norm_low", "reason", "count")])
}
agg_table_class <- agg_table %>% left_join(norm_lows[,c("id", "class")], by=c("id"))
agg_table_class$class <- as.factor(agg_table_class$class)
agg_table_class <- agg_table_class %>% group_by(id) %>% summarise(count = n(), class=first())
View(agg_table_class)
agg_table_class <- agg_table_class %>% group_by(id) %>% summarise(count = n(), class=first(class))
View(agg_table_class)
summary(aov(norm_low ~ class, data=agg_table_class))
summary(aov(count ~ class, data=agg_table_class))
ggplot(agg_table, aes(x=reorder(class,count), y=count)) + geom_boxplot() + ylim(c(0,5)) +
geom_point() + ylab("The number of 311 Inquiries")  + xlab("Poverty Class (4-levels)")
ggplot(agg_table_class, aes(x=reorder(class,count), y=count)) + geom_boxplot() + ylim(c(0,5)) +
geom_point() + ylab("The number of 311 Inquiries")  + xlab("Poverty Class (4-levels)")
ggplot(agg_table_class, aes(x=reorder(class,count), y=count)) + geom_boxplot() + ylim(c(0,10)) +
geom_point() + ylab("The number of 311 Inquiries")  + xlab("Poverty Class (4-levels)")
ggplot(agg_table_class, aes(x=reorder(class,count), y=count)) + geom_boxplot()  +
geom_point() + ylab("The number of 311 Inquiries")  + xlab("Poverty Class (4-levels)")
sids <- sample(cases$case_enquiry_id, 1000)
cases <- cases[cases$case_enquiry_id %in% sids,]
